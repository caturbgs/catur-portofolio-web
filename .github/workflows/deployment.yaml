name: Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Allows checking out code
      packages: write # Allows pushing to GHCR
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/catur-portofolio-web:latest
            ghcr.io/${{ github.repository_owner }}/catur-portofolio-web:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push # This job will only run after 'build-and-push' completes successfully
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          # port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Exit on any error
            set -e

            # Navigate to your project directory on the VPS
            cd /home/caturbgs/code/catur-portofolio-web

            # Verify we're in the right directory
            echo "Current directory: $(pwd)"
            echo "Files in directory:"
            ls -la

            # Update the repository to get latest docker-compose.yaml
            git fetch origin main
            git reset --hard origin/main

            # Log in to GitHub Container Registry on the server
            echo "Logging into GitHub Container Registry..."
            echo ${{ secrets.GH_CR_PAT }} | docker login ghcr.io -u ${{ secrets.GH_CR_USERNAME }} --password-stdin

            # Pull the latest image from the registry
            echo "Pulling latest Docker image..."
            docker compose pull

            # Stop existing containers
            echo "Stopping existing containers..."
            docker compose down

            # Start containers with the new image
            echo "Starting containers..."
            docker compose up -d

            # Wait a moment for containers to start
            sleep 5

            # Check container status
            echo "Container status:"
            docker compose ps
            docker ps -a

            # Show logs if container failed to start
            if ! docker compose ps | grep -q "Up"; then
              echo "Container logs:"
              docker compose logs
            fi

            # Optional: Prune old Docker images to free up space
            echo "Cleaning up old images..."
            docker image prune -f
